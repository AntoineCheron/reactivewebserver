swagger: "2.0"
info:
  description: "This is an person api used as an example server for demonstrating how to build a reactive webserver in Java with SpringFramework WebFlux"
  version: "0.0.1"
  title: "Reactive WebServer - Person"
  contact:
    email: "cheron.antoine@gmail.com"
host: "localhost"
tags:
- name: "persons"
  description: "Operations about persons"
  externalDocs:
    description: "Read the article"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /persons:
    get:
      tags:
      - "persons"
      summary: "Read the list of persons"
      description: ""
      operationId: "readPersons"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Person"
    post:
      tags:
      - "persons"
      summary: "Add a new person to the list"
      description: ""
      operationId: "addPerson"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Person object that needs to be added to the list"
        required: true
        schema:
          $ref: "#/definitions/Person"
      responses:
        400:
          description: "Invalid input"
        403:
          description: "A person with the same id already exists"
  /persons/{id}:
    get:
      tags:
      - "persons"
      summary: "Finds Person by id"
      description: ""
      operationId: "findPersonById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the person"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            items:
              $ref: "#/definitions/Person"
        404:
          description: "Resource not found"
    post:
      tags:
      - "persons"
      summary: "Update the information of the person with the given id"
      description: ""
      operationId: "updatePerson"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the person"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Person object that needs to be added to the list"
        required: true
        schema:
          $ref: "#/definitions/Person"
      responses:
        400:
          description: "Invalid input"
        404:
          description: "Resource not found"
    delete:
      tags:
      - "persons"
      summary: "Deletes a person"
      description: ""
      operationId: "deletePerson"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the person"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Resource not found"
definitions:
  Person:
    type: "object"
    properties:
      id:
        type: "string"
      firstName:
        type: "string"
      familyName:
        type: "string"
      age:
        type: "integer"
        format: "int32"